.border-secondary {
    border-color: $gray-300!important;
}


// Alerts

.alert-secondary {
    border-color: $gray-300;
}


// Badges

.badge {
    padding-top: 0.25em;
    padding-bottom: 0.3em;
}
.badge.badge-secondary {
    border: 1px solid #444444;
}


// Breadcrumbs

.breadcrumb {
    font-size: 1rem;
}
.breadcrumb-item a {
	color: #444444;
}
.breadcrumb-item a:hover {
	color: darken(#444444, 15%);
}


// Buttons + Forms

.btn:not(.btn-link).disabled,
.btn:not(.btn-link):disabled {
  @include box-shadow($btn-box-shadow);
}
@each $color, $value in $theme-colors {
    .btn-outline-#{$color} {
        border-width: 2px;
    }
}
.btn-outline-secondary {
    @include button-outline-variant(#444444);
}
.btn-secondary:focus:not(:disabled):not(.disabled),
.btn-secondary.focus:not(:disabled):not(.disabled) {
  @if $enable-shadows {
    box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba(#444444, .2)!important;
  } @else {
    box-shadow: 0 0 0 $btn-focus-width rgba(#444444, .2)!important;
  }
}
.btn.dropdown-toggle {
    padding: 0.4rem 0.75rem;
}

.btn-group,
.btn-group-vertical {
	box-shadow: $theme-box-shadow-sm;
	border-radius: $border-radius;
	&.btn-group-sm {
		border-radius: $border-radius-sm;
    }
	&.btn-group-lg {
		border-radius: $border-radius-lg;
	}
	
	.btn-group,
	.btn-group-vertical	{
		box-shadow: none;
	}
	.btn:not(:focus) {
		box-shadow: none !important;
	}
	.btn:disabled,
	.btn.disabled:hover,
	.btn.disabled:focus {
		z-index: auto;
	}
	.btn-secondary:not(.active):not(:active):not(.disabled):not(disabled):hover {
		border-color: transparent;
	}
}
@mixin btn-left-divider($color) {
	position: relative;
	&:not(.active):not(:active) {
		&:before {
			content: "";
			position: absolute;
			top: -$btn-border-width;
			left: -1px;
			height: calc(100% + 2 * #{$btn-border-width}); 
			width: $btn-border-width;
			background-color: $color;
		}
	}
}
@mixin btn-right-divider($color) {
	position: relative;
	&:not(.active):not(:active) {
		&:not(.dropdown-toggle):after {
			content: "";
			position: absolute;
			top: -$btn-border-width;
			right: -1px;
			height: calc(100% + 2 * #{$btn-border-width}); 
			width: $btn-border-width;
			background-color: $color;
		}
	}
}
@mixin btn-top-divider($color) {
	position: relative;
	&:not(.active):not(:active):before {
		content: "";
		position: absolute;
		top: -1px;
		left: -$btn-border-width;
		height: 1px;
		width: calc(100% + 2 * #{$btn-border-width});
		background-color: $color;
	}
}
@mixin btn-bottom-divider($color) {
	position: relative;
	&:not(.dropdown-toggle):after {
		content: "";
		position: absolute;
		bottom: -1px;
		left: -$btn-border-width;
		height: 1px;
		width: calc(100% + 2 * #{$btn-border-width});
		background-color: $color;
	}
}

.btn-group {
	@each $color, $value in $theme-colors {
		@if $color == "secondary" {
			& > .btn-secondary:not(:first-child),
			& > .btn-group:not(:first-child) > .btn-secondary:first-child {
				@include btn-left-divider(#eaeaea);
			}
			& > .btn-secondary:not(:last-child),
			& > .btn-group:not(:last-child) > .btn-secondary:last-child {
				@include btn-right-divider(#eaeaea);
			}
		} @else {
			& > .btn-#{$color}:not(:first-child),
			& > .btn-group:not(:first-child) > .btn-#{$color}:first-child {
				@include btn-left-divider(darken($value, 7.5%));
			}
			& > .btn-#{$color}:not(:last-child),
			& > .btn-group:not(:last-child) > .btn-#{$color}:last-child {
				@include btn-right-divider(darken($value, 7.5%));
			}
		} 
	}
}
.btn-group-vertical {
	@each $color, $value in $theme-colors {
		@if $color == "secondary" {
			& > .btn-secondary:not(:first-child),
			& > .btn-group-vertical:not(:first-child) > .btn-secondary:first-child {
				@include btn-top-divider(#eaeaea);
			}
			& > .btn-secondary:not(:last-child),
			& > .btn-group-vertical:not(:last-child) > .btn-secondary:last-child {
				@include btn-bottom-divider(#eaeaea);
			}
		} @else {
			& > .btn-#{$color}:not(:first-child),
			& > .btn-group-vertical:not(:first-child) > .btn-#{$color}:first-child {
				@include btn-top-divider(darken($value, 7.5%));
			}
			& > .btn-#{$color}:not(:last-child),
			& > .btn-group-vertical:not(:last-child) > .btn-#{$color}:last-child {
				@include btn-bottom-divider(darken($value, 7.5%));
			}
		} 
	}
}

// Cards

.card.text-white.bg-secondary {
    color: $gray-800!important;
}


// Checkboxes

.custom-checkbox,
.custom-radio {
    .custom-control-input:not(:checked):not(:indeterminate) ~ .custom-control-label::before {
        border: 1px solid rgba(0,0,0,0.2);
    }
    .custom-control-input:not(:checked):not(:indeterminate):not(:disabled) ~ .custom-control-label::before {
        background-color: white;
        box-shadow: none;
    }
    .custom-control-input:disabled ~ .custom-control-label::before {
        background-color: rgba(204,204,204,0.4);
        box-shadow: none;
    }
}

.custom-radio {
    .custom-control-input:checked ~ .custom-control-label::before {
        background-color: white;
        border: 1px solid rgba(0,0,0,0.2);
        box-shadow: none;
    }
}

// Switches

.custom-switch .custom-control-label::after {
	border-radius: 50%;
	top: calc(.035rem + 4px);
	left: calc(-3rem + 4px);
	background-color: #000;
}
.custom-switch .custom-control-label::before {
	border-color:  #000;
}
.custom-switch .custom-control-input:checked:disabled~.custom-control-label::before,
.custom-switch .custom-control-input:disabled~.custom-control-label::before {
	background-color: #444444;
	border-color: #444444;
	opacity: 0.2;
}
.custom-switch .custom-control-input:focus:not(:checked)~.custom-control-label::before {
	border-color:  #000;
}
.custom-switch .custom-control-input:checked:disabled~.custom-control-label::after,
.custom-switch .custom-control-input:disabled~.custom-control-label::after {
	background-color: #444444;
	opacity: 0.3;
}

// Forms

.input-group > .input-group-prepend > .btn-secondary,
.input-group > .input-group-append > .btn-secondary {
  border-color: $input-border-color !important;
}

.form-control:focus {
    border-color: $blue!important;
}
select.form-control > option:checked,
.custom-select > option:checked {
    background-color: $blue;
    color: white;
}
.custom-file > .custom-file-label::after {
    border-left: 0;
}
.input-group > .input-group-prepend > .btn,
.input-group > .input-group-append > .btn {
  border-radius: $theme-border-radius;
  box-shadow: none !important;
  border-color: $input-border-color;
}

// Navbar

.navbar {
    @include box-shadow($theme-box-shadow);
}


// Navs

.nav-tabs .nav-link:hover:before,
.nav-tabs .nav-link:focus:before,
.nav-tabs .nav-link.active:before {
    content: " ";
    border-bottom: $nav-tabs-border-width solid currentColor;
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    top: 0;
    opacity: .15;
}
.nav-tabs .nav-link:focus:before {
    background-color: $gray-700;
}
.nav-tabs .nav-link.active:before {
    background-color: transparent;
    border-bottom-color: $blue;
    opacity: 1; 
}
.nav-tabs .nav-item,
ul.nav-tabs > li {
    position: relative;
    margin-bottom: -$nav-tabs-border-width;
}
.nav-tabs .nav-link,
.nav-tabs .nav-link.active {
    color: #222222;
}
.nav-tabs .nav-link,
.nav-pills .nav-link {
    outline: none;
}
.nav-pills .nav-item:not(.show) > .nav-link:not(.active):hover {
    background-color: $gray-200;
}
.nav-pills .nav-item:not(.show) > .nav-link:not(.active):focus {
    background-color: $gray-300;
}



// Pagination

.pagination {
    font-weight: $theme-font-weight-semibold;
}
.pagination .page-link {
    font-size: 1rem;
}
.pagination-sm .page-link {
    font-size: 0.88rem;
}
.pagination-lg .page-link {
    font-size: 1.1rem;
}

// DX

.dx-blazor-tagbox .dx-blazor-tag .btn.dxbs-cmd-btn.dxbs-tag-remove-btn {
	@mixin child-outside($offset) {
		&:before {
			@content;
			width: calc(100% + #{2 * $offset});
			height: calc(100% + #{2 * $offset});
			left: -$offset;
			top: -$offset;
		}
	}
	
	&:not(:focus):not(:hover) {
		color: #737373 !important;
	}
	
	&:focus,
	&:hover {
		color: #fff !important;
		@include child-outside(.408em) {
			opacity: 1;
			background-color: $blue;
		}		
	}
	
	&.btn-sm:focus,
	&.btn-sm:hover {
		@include child-outside(.204em);	
	}
}

.dxbs-focus-hidden {
	@each $color, $value in $theme-colors {
		.btn-#{$color} {
			&:focus,
			&.focus {
				&:not(:hover):not(.hover) {
					color: color-yiq($value);
					@include gradient-bg($value);
				}
				border-color: $value;
				@if $color == "secondary" {
					&,
					&:not(:disabled):not(.disabled) {
						@if $enable-shadows {
							box-shadow: $btn-box-shadow !important;
						}
						@else {
							box-shadow: none!important;
						}
					}
				}
				@else {
					@if $enable-shadows {
						box-shadow: $btn-box-shadow !important;
					}
					@else {
						box-shadow: none !important;
					}
				}
			}
		}
		.btn-outline-#{$color} {
			&:focus,
			&.focus {
				box-shadow: none !important;
			}
		}
		.btn-group,
		.btn-group-vertical,
		.input-group > .input-group-prepend,
		.input-group > .input-group-append {
			.btn-#{$color} {
				&:focus,
				&.focus {
					box-shadow: none !important;
					
					@if $color == "secondary" {
						&:not(:disabled):not(.disabled) {
							box-shadow: none !important;
						}
					}
				}
			}
		}
		.input-group > .input-group-prepend,
		.input-group > .input-group-append {
			& > .btn-#{$color} {
				&:focus,
				&.focus {
					border-color: $input-border-color;
				}
			}
		}
	}
	.btn-link{
		&:focus,
		&.focus {
			box-shadow: none !important;
			text-decoration: none;
		}
	}
}
