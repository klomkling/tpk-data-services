@inherits InventoryRequestComponentBase

<ProcessingSpiner Visible="@IsComponentBusy"/>

@if (ComponentMode == ComponentMode.List)
{
    <div class="position-relative">
        <div class="@(IsDetailBusy ? "component-backdrop" : null)"></div>

        <WarningModal WarningMessage="@WarningMessage"
                      WarningResponse="@HandleWarningResponse"
                      @bind-IsShowWarning="@IsShowWarning"/>

        <DxDataGrid  CustomData="@LoadInventoryRequests"
                     KeyFieldName="@KeyFieldName"
                     CssClass="@CssClass"
                     PageSize="@PageSize"
                     PageIndex="@PageIndex"
                     SelectionMode="@SelectionMode"
                     SelectAllMode="@SelectAllMode"
                     ShowFilterRow="IsShowFilterRow"
                     RowClick="@OnRowClick"
                     LayoutRestoring="@OnLayoutRestoring"
                     PagerPageSizeSelectorVisible="true"
                     PagerAllDataRowsItemVisible="true"
                     PagerAllowedPageSizes="@AllowedPageSizes"
                     T="@InventoryRequestWithDetail"
                     @bind-MultipleSelectedDataRows="@SelectedCollection"
                     @ref="@Grid">

            <HeaderTemplate>
                <DataGridToolbar IsBusy="@(IsBusy || IsMasterBusy || IsDetailBusy)"
                                 CssClass="@ToolbarCssClass"
                                 SelectedCount="@SelectedCount"
                                 RequiredClaimType="@RequiredClaimType"
                                 OnToolbarClick="@HandleToolbarResponse"/>
            </HeaderTemplate>

            <Columns>
                @* <DxDataGridSelectionColumn Width="60px"/> *@
                <DxDataGridColumn Field="@nameof(InventoryRequestWithDetail.RequestNumber)" Caption="No.">
                    <DisplayTemplate>
                        @{
                            var orderNumb = $"{((InventoryRequest) context).RequestNumber:000000}";
                            <span>@orderNumb</span>
                        }
                    </DisplayTemplate>
                </DxDataGridColumn>
                <DxDataGridColumn Field="@nameof(InventoryRequestWithDetail.RequestTypeName)"
                                  Caption="Request Type"/>
                <DxDataGridDateEditColumn Field="@nameof(InventoryRequestWithDetail.RequestDate)"
                                          DisplayFormat="dd/MM/yyyy" Caption="Due Date"/>
                <DxDataGridDateEditColumn Field="@nameof(InventoryRequestWithDetail.DueDate)"
                                          DisplayFormat="dd/MM/yyyy" Caption="Due Date"/>
                <DxDataGridDateEditColumn Field="@nameof(InventoryRequestWithDetail.CompletedDate)"
                                          DisplayFormat="dd/MM/yyyy" Caption="Completed Date" Visible="false"/>
                <DxDataGridColumn Field="@nameof(InventoryRequestWithDetail.StatusName)"
                                  Caption="Req. Status"
                                  Width="100px"/>
                <DxDataGridDateEditColumn Field="@nameof(InventoryRequestWithDetail.StatusDate)"
                                          DisplayFormat="dd/MM/yyyy" Caption="Status Date" Visible="false"/>
                <DxDataGridColumn Field="@nameof(InventoryRequestWithDetail.RequestedBy)"
                                  Caption="Requested By" Visible="false"/>
                <DxDataGridColumn Field="@nameof(InventoryRequestWithDetail.RequestApprovedBy)"
                                  Caption="Request Approved By" Visible="false"/>
                <DxDataGridColumn Field="@nameof(InventoryRequestWithDetail.StockPerson)"
                                  Caption="Stock Person" Visible="false"/>
                <DxDataGridColumn Field="@nameof(InventoryRequestWithDetail.StockApprovedBy)"
                                  Caption="Stock Approved By" Visible="false"/>
                <DxDataGridColumn Field="@nameof(InventoryRequestWithDetail.AccountPerson)"
                                  Caption="Account Person" Visible="false"/>
                <DxDataGridColumn Field="@nameof(InventoryRequestWithDetail.CheckedBy)"
                                  Caption="Checked By" Visible="false"/>
                <DxDataGridColumn Field="@nameof(InventoryRequestWithDetail.Remark)"
                                  Caption="Remark" Visible="false"/>
                <DxDataGridColumn Field="@nameof(InventoryRequestWithDetail.DeletedStatus)" Caption="Status"
                                  Width="80px" TextAlignment="DataGridTextAlign.Center"
                                  Visible="@IsAdmin" ShowInColumnChooser="false"/>
            </Columns>
        </DxDataGrid>
    </div>
}
else
{
    <div class="card py-2">
        <EditForm Model="@DataEditContext" Context="editFormContext" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
            <FluentValidationValidator/>
            <DxFormLayout CaptionPosition="@CaptionPosition.Vertical" ItemSizeMode="SizeMode.Medium" Context="FormLayoutContext">
                <DxFormLayoutItem Caption="Order No." ColSpanMd="3" CssClass="@(ComponentMode == ComponentMode.Add ? "with-tooltip" : null)">
                    <Template>
                        <DxTextBox @bind-Text="@DataEditContext.RequestNumberDisplay"
                                    ReadOnly="true"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Date" ColSpanMd="3">
                    <Template>
                        <DxDateEdit @bind-Date="@DataEditContext.RequestDate"
                                     DisplayFormat="dd/MM/yyyy"
                                     Format="dd/MM/yyyy"
                                     ReadOnly="true"/>
                        <ValidationMessage For="() => DataEditContext.RequestDate"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Due Date" ColSpanMd="3">
                    <Template>
                        <DxDateEdit @bind-Date="@DataEditContext.DueDate"
                                     DisplayFormat="dd/MM/yyyy"
                                     Format="dd/MM/yyyy"/>
                        <ValidationMessage For="() => DataEditContext.DueDate"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Status" ColSpanMd="3">
                    <Template>
                        <DxComboBox Data="@RequestStatusCollection"
                                    ValueFieldName="@nameof(TgOrderStatuses.Value)"
                                    TextFieldName="@nameof(TgOrderStatuses.DisplayName)"
                                    @bind-Value="@DataEditContext.Status"
                                    CssClass="normal-combobox"/>
                        <ValidationMessage For="() => DataEditContext.Status"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Request Type" ColSpanMd="3">
                    <Template>
                        @if (IsManual)
                        {
                            <DxComboBox Data="@RequestTypeCollection"
                                        ValueFieldName="@nameof(TgInventoryRequestTypes.Value)"
                                        TextFieldName="@nameof(TgInventoryRequestTypes.DisplayName)"
                                        CssClass="normal-combobox"
                                        @bind-Value="@DataEditContext.RequestType"/>
                        }
                        else
                        {
                            <DxTextBox ReadOnly="true" 
                                       @bind-Text="@RequestTypeName"/>
                        }
                    </Template>
                </DxFormLayoutItem>
                @if (IsManual)
                {
                    <DxFormLayoutItem Caption="To Stockroom" ColSpanMd="3">
                        <Template>
                            <BlazoredTypeahead SearchMethod="SearchStockrooms"
                                               EnableDropDown="true"
                                               Context="stockroomContext"
                                               placeholder="Type to search..."
                                               @bind-Value="SelectedStockroom">
                                <SelectedTemplate>
                                    @stockroomContext.Name
                                </SelectedTemplate>
                                <ResultTemplate>
                                    @stockroomContext.Name
                                </ResultTemplate>
                            </BlazoredTypeahead>
                            <ValidationMessage For="() => DataEditContext.StockroomId"/>
                        </Template>
                    </DxFormLayoutItem>
                }
                <DxFormLayoutItem Caption="Requested By" ColSpanMd="3">
                    <Template>
                        <DxTextBox @bind-Text="@DataEditContext.RequestedBy"
                                    ReadOnly="true"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Requested Approved By" ColSpanMd="3">
                    <Template>
                        <DxTextBox @bind-Text="@DataEditContext.RequestApprovedBy"
                                    ReadOnly="true"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Stock Person" ColSpanMd="3">
                    <Template>
                        <DxTextBox @bind-Text="@DataEditContext.StockPerson"
                                    ReadOnly="true"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Stock Approved By" ColSpanMd="3">
                    <Template>
                        <DxTextBox @bind-Text="@DataEditContext.StockApprovedBy"
                                    ReadOnly="true"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Account Person" ColSpanMd="3">
                    <Template>
                        <DxTextBox @bind-Text="@DataEditContext.AccountPerson"
                                    ReadOnly="true"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Checked By" ColSpanMd="3">
                    <Template>
                        <DxTextBox @bind-Text="@DataEditContext.CheckedBy"
                                    ReadOnly="true"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Remark" ColSpanMd="12">
                    <Template>
                        <DxTextBox @bind-Text="@DataEditContext.Remark"
                                    ReadOnly="@IsRemarkReadOnly()"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem ColSpanMd="12">
                    <Template>
                        <EditFormButtonGroup ComponentMode="@ComponentMode"
                                             SaveAndCloseOnlyWhenAdd="true"
                                             CancelUpdateClicked="@CancelUpdateClick"
                                             @bind-SubmitClick="@SubmitClick"
                                             @bind-SaveAndClose="@SaveAndClose">
                            <span class="mr-auto help-text @(ComponentMode == ComponentMode.Edit ? "d-none" : null)">* Auto-generate after saved.</span>
                        </EditFormButtonGroup>
                    </Template>
                </DxFormLayoutItem>
            </DxFormLayout>
        </EditForm>
    </div>
}