@inherits CustomerOrderLineComponentBase

<ProcessingSpiner Visible="@IsComponentBusy"/>

@if (ComponentMode == ComponentMode.List)
{
    <div class="position-relative">
        <div class="@(IsDetailBusy ? "component-backdrop" : null)"></div>

        <WarningModal @bind-IsShowWarning="@IsShowWarning"
                       WarningMessage="@WarningMessage"
                       WarningResponse="@HandleWarningResponse"/>

        <DxDataGrid @ref="@Grid"
                     T="@CustomerOrderLineWithDetail"
                     CustomData="@LoadCustomerOrderLines"
                     KeyFieldName="@KeyFieldName"
                     CssClass="@CssClass"
                     PageSize="@PageSize"
                     PageIndex="@PageIndex"
                     SelectionMode="@SelectionMode"
                     SelectAllMode="@SelectAllMode"
                     @bind-MultipleSelectedDataRows="@SelectedCollection"
                     ShowFilterRow="IsShowFilterRow"
                     RowClick="@OnRowClick"
                     LayoutRestoring="@OnLayoutRestoring"
                     PagerPageSizeSelectorVisible="true"
                     PagerAllDataRowsItemVisible="true"
                     PagerAllowedPageSizes="@AllowedPageSizes">

            <HeaderTemplate>
                <DataGridToolbar IsBusy="@(IsBusy || IsMasterBusy || IsDetailBusy)"
                                 CssClass="@ToolbarCssClass"
                                 SelectedCount="@SelectedCount"
                                 RequiredClaimType="@RequiredClaimType"
                                 OnToolbarClick="@HandleToolbarResponse"
                                 IsPermanent="@IsPermanent"
                                 CanEdit="@(IsPermanent == false)"
                                 CanRestore="@CanRestore"/>
            </HeaderTemplate>

            <Columns>
                @* <DxDataGridSelectionColumn Width="60px"/> *@
                <DxDataGridColumn Field="@nameof(CustomerOrderLineWithDetail.ProductCode)"
                                  Caption="Product Code"/>
                <DxDataGridColumn Field="@nameof(CustomerOrderLineWithDetail.Description)"
                                  Caption="Description"/>
                <DxDataGridSpinEditColumn Field="@nameof(CustomerOrderLineWithDetail.Quantity)"
                                          Caption="Quantity" Width="100px"
                                          DisplayFormat="N"/>
                <DxDataGridColumn Field="@nameof(CustomerOrderLineWithDetail.UnitName)"
                                  Caption="Unit" Width="100px"/>
                <DxDataGridSpinEditColumn Field="@nameof(CustomerOrderLineWithDetail.Price)"
                                          Caption="Price" Width="100px"
                                          DisplayFormat="N"/>
                <DxDataGridSpinEditColumn Field="@nameof(CustomerOrderLineWithDetail.Amount)"
                                          Caption="Amount" Width="100px"
                                          DisplayFormat="N"
                                          Visible="false"/>
                <DxDataGridSpinEditColumn Field="@nameof(CustomerOrderLineWithDetail.DiscountRate)"
                                          Caption="Discount (%)" Width="100px"
                                          DisplayFormat="N"
                                          Visible="false"/>
                <DxDataGridSpinEditColumn Field="@nameof(CustomerOrderLineWithDetail.DiscountAmount)"
                                          Caption="Discount Amt." Width="100px"
                                          DisplayFormat="N"
                                          Visible="false"/>
                <DxDataGridSpinEditColumn Field="@nameof(CustomerOrderLineWithDetail.NetAmount)"
                                          Caption="Net Amount" Width="100px"
                                          DisplayFormat="N"/>
                <DxDataGridColumn Field="@nameof(CustomerOrderLineWithDetail.Remark)"
                                  Caption="Remark" Visible="false"/>
                <DxDataGridColumn Field="@nameof(CustomerOrderLineWithDetail.DeletedStatus)" Caption="Status"
                                  Width="80px" TextAlignment="DataGridTextAlign.Center"
                                  Visible="@IsAdmin" ShowInColumnChooser="false"/>
            </Columns>
        </DxDataGrid>
    </div>
}
else
{
    <div class="card py-2">
        <EditForm Model="@DataEditContext" Context="editFormContext" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
            <FluentValidationValidator/>
            <DxFormLayout CaptionPosition="CaptionPosition.Vertical" ItemSizeMode="SizeMode.Medium" Context="FormLayoutContext">
                <DxFormLayoutItem Caption="Product" ColSpanMd="4">
                    <Template>
                        <BlazoredTypeahead SearchMethod="SearchProducts"
                                           @bind-Value="SelectedCustomerProduct"
                                           Context="productContext"
                                           EnableDropDown="true"
                                           placeholder="Type to search...">
                            <SelectedTemplate>
                                @productContext.Code
                            </SelectedTemplate>
                            <ResultTemplate>
                                @productContext.Code
                            </ResultTemplate>
                        </BlazoredTypeahead>
                        <ValidationMessage For="() => DataEditContext.ProductId"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Description" ColSpanMd="8">
                    <Template>
                        <DxTextBox @bind-Text="@DataEditContext.Description"/>
                        <ValidationMessage For="() => DataEditContext.Description"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="@($"Quantity{UnitName}")" ColSpanMd="4">
                    <Template>
                        <DxSpinEdit BindValueMode="BindValueMode.OnInput"
                                    MaxValue="999999.9999m"
                                    MinValue="0m"
                                    Increment="0.0001m"
                                    DisplayFormat="N"
                                    Value="@DataEditContext.EditQuantity"
                                    ValueExpression="@(() => DataEditContext.EditQuantity)"
                                    ValueChanged="@((decimal newQuantity) => OnQuantityChanged(newQuantity))"/>
                        <ValidationMessage For="() => DataEditContext.Quantity"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Price" ColSpanMd="4">
                    <Template>
                        <DxSpinEdit BindValueMode="BindValueMode.OnInput"
                                    MaxValue="9999.9999m"
                                    MinValue="0m"
                                    Increment="0.0001m"
                                    DisplayFormat="N"
                                    @bind-Value="@DataEditContext.EditPrice"/>
                        <ValidationMessage For="() => DataEditContext.Price"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Amount" ColSpanMd="4">
                    <Template>
                        <DxTextBox @bind-Text="@DataEditContext.AmountDisplay"
                                    ReadOnly="true"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Discount (%)" ColSpanMd="4">
                    <Template>
                        <DxSpinEdit @bind-Value="@DataEditContext.EditDiscountRate"
                                     BindValueMode="BindValueMode.OnInput"
                                     MaxValue="100m"
                                     MinValue="0m"
                                     Increment="0.01m"
                                     DisplayFormat="N"/>
                        <ValidationMessage For="() => DataEditContext.DiscountRate"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Discount Amount" ColSpanMd="4">
                    <Template>
                        <DxSpinEdit @bind-Value="@DataEditContext.EditDiscountAmount"
                                     BindValueMode="BindValueMode.OnInput"
                                     MaxValue="999999.9999m"
                                     MinValue="0m"
                                     Increment="0.0001m"
                                     DisplayFormat="N"/>
                        <ValidationMessage For="() => DataEditContext.DiscountAmount"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Net Amount" ColSpanMd="4">
                    <Template>
                        <DxTextBox @bind-Text="@DataEditContext.NetAmountDisplay"
                                    ReadOnly="true"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem Caption="Remark" ColSpanMd="12">
                    <Template>
                        <DxTextBox @bind-Text="@DataEditContext.Remark"/>
                        <ValidationMessage For="() => DataEditContext.Remark"/>
                    </Template>
                </DxFormLayoutItem>
                <DxFormLayoutItem ColSpanMd="12">
                    <Template>
                        <EditFormButtonGroup ComponentMode="@ComponentMode"
                                             CancelUpdateClicked="@CancelUpdateClick"
                                             @bind-SubmitClick="@SubmitClick"
                                             @bind-SaveAndClose="@SaveAndClose"/>
                    </Template>
                </DxFormLayoutItem>
            </DxFormLayout>
        </EditForm>
    </div>
}